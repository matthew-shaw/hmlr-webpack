{"version":3,"file":"hmlr-frontend.min.css","mappings":"AAAA,MCAA,gCAGE,yCAIE,0GCNF,4BFEkB,mCGalB,kCACA,kCCaA,CDbA,yBCaA,4CCb+B,8BAaH,cCsMtB,YJnON,sBKsBwB,oBFuBa,qCDQnC,8BACQ,CAzCV,iDCgCqC,CDS3B,iCACR,0BACQ,mBIoBc,qBAVL,CC3CnB,kCAIA,4BDuCmB,oCC/CjB,CLFF,uBKFA,CAIE,4BAIF,CAJE,oBASM,kBLgDR,aIwDkB,qBJpDlB,aI2D0B,mBJvD1B,aI8DwB,CAOC,qCJ3DzB,aIlBwB,cFuJlB,oGF+HF,2BACE,cACA,qBAKA,qDA3KN,aItI4B,CAoBJ,2IJoJxB,aI3MkB,cF8MZ,+DFHN,UIjLwB,iCJwLxB,eAEI,gEAIJ,aIxNkB,cF8MZ,+DFUN,UI9LwB,yDJqNxB,UAEE,wDAKF,eAEE,4BAGF,aIpMwB,oDJoQxB,4BACE,CADF,oBACE,CI7MgB,yEJ0KlB,aI1KkB,qCJ8KlB,aIhKwB,CAOC,yEJmKzB,aIhPwB,mBNzCxB,oBEqVA,cAGA,6BAGA,CAHA,oBAGA,yBKrVA,4CLuVA,uBKrVE,aC3CF,4BVEkB,mCGalB,kCACA,CA2N2B,aKtNT,CL6BlB,cAwLkB,CA1NlB,eAkCA,CAwLkB,gBACS,COtOzB,qBAFA,kBCsGI,CHpFY,YElBhB,CCsGI,cDnGJ,cJ6NI,YInON,sBHsBwB,8BD6MlB,YInON,mBP0OkB,yBACS,eGRrB,YInON,yBPyOc,iBAEa,EK5LH,4BFoLlB,YInON,kBCgHQ,0BDvGN,eACE,gBAIJ,iBAIE,qBAQA,qBADF,iBAEE,qBAIA,wBADF,iBAEE,+CAGF,eAEE,6BJ8LI,8CIhMN,iBAKI,yBAIJ,kBACE,6BJsLI,uBIvLN,kBAII,oBE9CJ,aJmBkB,6BRnBA,mCGalB,kCACA,CA2N2B,aSrOzB,CTsDF,cA8KkB,CA1NlB,eA4CA,CA8KkB,mBACS,CSnOzB,mBAFA,YDmGI,cL0HA,kBMjON,iCJ6CwB,EDzBA,4BD6MlB,kBMjON,cTwOkB,yBACS,eGRrB,kBMjON,cTuOc,iBAEa,8BGRrB,kBMjON,kBD8GQ,mBChGR,aJKkB,6BRnBA,mCGalB,kCACA,CA2N2B,aSvNzB,CTwCF,gBA8KkB,CA1NlB,eA4CA,CA8KkB,wBACS,CSrNzB,mBAFA,YDqFI,cL0HA,iBMnNN,iCJ+BwB,EDzBA,4BD6MlB,iBMnNN,iBT0NkB,yBACS,eGRrB,iBMnNN,cTyNc,iBAEa,8BGRrB,iBMnNN,kBDgGQ,mBClFR,aJTkB,6BRnBA,mCGalB,kCACA,CA2N2B,aSzMzB,CT0BF,kBA8KkB,CA1NlB,eA4CA,CA8KkB,wBACS,CSvMzB,mBAFA,YDuEI,cL0HA,iBMrMN,iCJiBwB,EDzBA,4BD6MlB,iBMrMN,gBT4MkB,iBACS,eGRrB,iBMrMN,cT2Mc,iBAEa,8BGRrB,iBMrMN,kBDkFQ,mBCpER,aJvBkB,6BRnBA,mCGalB,kCACA,CA2N2B,aS3LzB,CTYF,cA8KkB,CA1NlB,eA4CA,CA8KkB,gBACS,CSzLzB,mBAFA,YDyDI,cL0HA,iBMvLN,iCJGwB,EDzBA,4BD6MlB,iBMvLN,mBT8LkB,yBACS,eGRrB,iBMvLN,cT6Lc,iBAEa,8BGRrB,iBMvLN,kBDoEQ,oBCpDR,4BZ1DkB,mCGalB,kCACA,CSiDE,cT0KyB,aS5KzB,CTbF,kBAwLkB,CA1NlB,eAkCA,CAwLkB,wBACS,CS5KzB,iBJP0B,cF2KtB,kBMvKN,sBLtCwB,8BD6MlB,kBMvKN,mBT8KkB,yBACS,eGRrB,kBMvKN,cT6Kc,iBAEa,mBSrK3B,4BZpEkB,mCGalB,kCACA,CS2DE,cTgKyB,aSlKzB,CTvBF,kBAwLkB,CA1NlB,eAkCA,CAwLkB,wBACS,CSlKzB,iBJjB0B,cF2KtB,iBM7JN,sBLhDwB,8BD6MlB,iBM7JN,gBToKkB,iBACS,eGRrB,iBM7JN,cTmKc,iBAEa,8BGRrB,iBM7JN,eASI,mBAIJ,4BZjFkB,mCGalB,kCACA,CSsEE,cTqJyB,aSrJzB,CTpCF,cAwLkB,CA1NlB,eAkCA,CAwLkB,gBKlLU,cF2KtB,iBMhJN,sBL7DwB,8BD6MlB,iBMhJN,mBTuJkB,yBACS,eGRrB,iBMhJN,cTsJc,iBAEa,iCS9I3B,aJxEkB,6BRnBA,mCGalB,kCACA,CAkCA,kBAwLkB,CA1NlB,eAkCA,CAwLkB,wBACS,CS1IzB,mBT0IyB,YQlIrB,cL0HA,+BMtIN,iCJ9CwB,EDzBA,4BD6MlB,+BMtIN,gBT6IkB,iBACS,eGRrB,+BMtIN,cT4Ic,iBAEa,8BGRrB,+BMtIN,kBDmBQ,4BCPR,aJpFkB,6BRnBA,mCGalB,kCACA,CAkCA,cAwLkB,CA1NlB,eAkCA,CAwLkB,gBACS,CS9HzB,mBT8HyB,YQlIrB,cL0HA,0BM1HN,iCJ1DwB,EDzBA,4BD6MlB,0BM1HN,mBTiIkB,yBACS,eGRrB,0BM1HN,cTgIc,iBAEa,8BGRrB,0BM1HN,kBDOQ,gBCKR,aJhGkB,6BRnBA,mCGalB,kCACA,CAkCA,iBAwLkB,CA1NlB,eAkCA,CAwLkB,wBACS,CSlHzB,mBTkHyB,YQlIrB,cL0HA,cM9GN,iCJtEwB,EDzBA,4BD6MlB,cM9GN,cTqHkB,iBACS,eGRrB,cM9GN,cToHc,gBAEa,8BGRrB,cM9GN,kBDLQ,iBCkBR,aJ7GkB,6BRnBA,mCGalB,kCACA,CAkCA,gBAwLkB,CA1NlB,eAkCA,CAwLkB,gBACS,CSrGzB,mBTqGyB,YQlIrB,cL0HA,eMjGN,iCJnFwB,EDzBA,4BD6MlB,eMjGN,iBTwGkB,yBACS,eGRrB,eMjGN,cTuGc,gBAEa,8BGRrB,eMjGN,kBDlBQ,mEC+CR,eACE,6BNmEI,iEMpEN,gBAII,0HAIJ,gBD9DM,6BL0HA,wHM5DN,gBDvDQ,kPC6DR,eAME,6BNgDI,gPMtDN,gBASI,uBCrLF,SADF,QAEE,0BFuGI,mBE9FN,eF8FM,6BL0HA,yBOxNN,kCFqGQ,0BAPF,mBErFN,eFqFM,6BL0HA,wBO/MN,kCF4FQ,0BAPF,mBE5EN,eF4EM,6BL0HA,wBOtMN,kCFmFQ,gCExER,+BACE,qBCVA,mBH0EI,YG3EJ,sBACA,CArBF,iBAsBE,6BRmMI,oBQzNN,kBHsGQ,kCGzEN,4BdrCgB,mCGalB,kCACA,CA2N2B,oBWlMvB,CXSJ,cAwLkB,CA1NlB,eAkCA,CAwLkB,kBACS,CWzNV,kBA4Bb,CAFA,cA1Ba,CAuBb,cAGA,CAEA,iBACA,cRoLE,gCQ5LJ,sBPjBsB,8BD6MlB,gCQ5LJ,mBXmMgB,cACS,eGRrB,gCQ5LJ,cXkMY,iBAEa,oCWvLzB,kBACE,6BR8KE,oBQpKF,qBAHA,kBAEA,eACA,CArDJ,kBAsDI,mEAEA,iBAvDe,iCA4Df,eACE,oBCtEN,kBJuGM,yBK/FJ,WAFF,UACE,cAEA,6BVwNI,kBSjON,kBJ8GQ,mDI1GN,eACE,0BAKF,8BADF,iBAEE,4CAIE,SAFF,SAGE,iBEdF,kBAFF,kBAGE,uBDKA,WAFF,UACE,cAEA,gCCFA,qBCyCF,CAEE,eAFF,UAIA,6BZ6KM,+BY3KJ,WD/CA,SCwC2C,+BDxC3C,qBCyCF,CAEE,eAFF,UAIA,6BZ6KM,6BY3KJ,WD/CA,oBCwC2C,8BDxC3C,qBCyCF,CAEE,eAFF,UAIA,6BZ6KM,4BY3KJ,WD/CA,SCwC2C,gCDxC3C,qBCyCF,CAEE,eAFF,UAIA,6BZ6KM,8BY3KJ,WD/CA,oBCwC2C,oCDxC3C,qBCyCF,CAEE,eAFF,UAIA,6BZ6KM,kCY3KJ,WD/CA,SCwC2C,0BDxC3C,qBCyCF,CAEE,eAFF,UAIA,6BZ6KM,wBY3KJ,WD/CA,UCwC2C,8CD/B3C,qBCgCF,eAIA,6BZ6KM,4CY3KJ,WDtCA,SC+B2C,4CD/B3C,qBCgCF,eAIA,6BZ6KM,0CY3KJ,WDtCA,oBC+B2C,2CD/B3C,qBCgCF,eAIA,6BZ6KM,yCY3KJ,WDtCA,SC+B2C,6CD/B3C,qBCgCF,eAIA,6BZ6KM,2CY3KJ,WDtCA,oBC+B2C,iDD/B3C,qBCgCF,eAIA,6BZ6KM,+CY3KJ,WDtCA,SC+B2C,uCD/B3C,qBCgCF,eAIA,6BZ6KM,qCY3KJ,WDtCA,UC+B2C,sBC1B7C,aAIE,CACA,oBADA,gBAEA,6BbsMI,oBahMF,oBAZJ,gBAaI,uEAWJ,gBR0DM,6BL0HA,qEapLN,gBRiEQ,kBS7GR,wBZ4B+B,8BYrB7B,2BACG,sBACK,2DAcR,gBAvBF,uBAwBI,kDAEA,oBACE,gBdqMA,gBchON,iBAkCI,wBAQF,sBAHF,QZJ6B,wBaYX,iBAtCD,iBAsCC,CCoBlB,eDpBkB,kCCvBlB,uBAME,6DAqCF,8DApCE,8BhBiMI,uBexLO,iBC2Bb,iBD3Ba,yDCMT,6DAqBJ,8DApBI,4BhBiLE,uBgB1KJ,iBAaF,iBAZE,kCAIA,uBACE,iBAOJ,iBANI,iBCxDJ,4BvBNkB,mCGalB,kCACA,CKKkB,mBGoFZ,4BY5FJ,cfQgB,CL6BlB,iBAwLkB,CA1NlB,eAkCA,CAwLkB,wBACS,CQlIrB,oBRkIqB,gBK5MI,cFoMzB,ciB3NN,sBhBcwB,8BD6MlB,ciB3NN,cpBkOkB,iBACS,eGRrB,ciB3NN,cpBiOc,gBAEa,8BGRrB,ciB3NN,oCZwGQ,sBY9FR,4BvBhBkB,mCGalB,kCACA,kCCaA,CDbA,yBCaA,4CCb+B,8BAaH,cCsMtB,oBiBjNN,sBhBIwB,4BFuBa,qCDQnC,8BACQ,CAzCV,iDCgCqC,CDS3B,iCACR,0BACQ,2BIoBc,qBAVL,CC3CnB,kCAIA,4BDuCmB,oCC/CjB,CAJF,aD6DwB,CJ3DxB,uBKFA,CAIE,4BAIF,CAJE,oBASM,sDLoMR,aI3MkB,cF8MZ,qDFHN,UIjLwB,4BJwLxB,eAEI,sDAIJ,aIxNkB,cF8MZ,qDFUN,UI9LwB,+BG0DlB,QY/EJ,iCAFA,eAGA,6BjBwMI,6BiB5MN,kBZyFQ,sBY9EN,oBACA,CALF,YACE,CAEA,cACA,CACA,uBAHA,iBACA,CAFA,kBAKA,0BFcgB,kBEThB,kBAFF,iBFWkB,gCELlB,MACE,6BjBqLI,+BiBtLN,gBAGI,8BAIJ,oBACE,CAKA,yBALA,iBACA,mBAOA,6BjBsKI,4BiB/KN,kBAII,qCAQJ,oBAEE,kBAGA,+BAMA,oDACA,yBACA,CAFA,2BACA,CACA,2BACA,CANF,oBACE,gBApE+B,kBAsE/B,CAGA,iBACA,mBACA,4BAIF,kBACE,CAJA,YAGF,CACE,SACA,4BACA,kBAGF,iCACE,oBAGF,CACE,iBACA,CAFF,iBAEE,wBAKA,+BACA,CALA,kBAGF,oBAEE,6BAKA,uBjBwHI,mBiB/HN,4BAUA,iBAEE,CAPE,kBAOF,iCPvGA,UACA,COuGA,UPzGF,cAEE,wBACA,oBOyGF,mBACE,mBF1EW,qBEiFX,eACA,CAFA,eACA,CALA,QAGF,UAGE,6BFlFW,+BfwLP,ciBjGJ,gCACE,cAGF,2BACE,kBAIJ,6BZlCM,yBL0HA,kBiBxFN,sCZ3BQ,eY+BR,eACE,4BClIF,mCxBZkB,kCGalB,CqBEE,kBAdkB,CrBuOF,6BACS,WqB1NzB,CrBDF,iBAkCA,CAnCA,eACA,CAkCA,aqB/CoB,cAHM,clBmOpB,sBkBrNN,8BjBQwB,cD6MlB,ckBrNN,crB4NkB,eACS,cGRrB,ckBrNN,crB2Nc,uCqBnNd,oBACE,CrBoNyB,cqBpNzB,iExBlBiB,UwBqBjB,0BAQA,gCACA,CAJF,mBAEE,iBACA,CAPE,iBAQF,gCR1BA,UACA,CQ0BA,UR5BF,cAEE,kCACA,2BQ4BF,2DxBlCmB,yBwBqCjB,yBACE,oBAIJ,CAEE,gBACA,CAHF,iBACE,SACA,CACA,iBAIA,mBACA,8BACA,wBATF,cAcI,CADF,wBACE,qCACA,cAKF,6BrBwKyB,oBAzL3B,CqBkBI,kBAIJ,CrBkKkB,eACS,CqBnK3B,arBkKkB,CAxLlB,eqB4BE,mBALsB,6BAiBtB,4BlByII,gBkB3JN,crBkKkB,eACS,4BGRrB,ckB3JN,crBiKc,8BAEa,4BqBtJzB,gBAbF,8BAcI,4BlB6IE,ckB3JN,6BAE+B,4BAoB3B,gBAtBJ,uBAuBM,4BAKN,2EAUE,UpBsJF,sDAEE,eAKF,CAKA,0BIpMwB,iCgBoCtB,wDACE,8BA3GoC,2BfSxC,qBD6DwB,CCzDtB,kCAIF,2BAIA,CDiDwB,oCAVL,CgBuDjB,af1GF,CJc4B,uBmB4F1B,ChBvDiB,4BC/CjB,qBAQF,+BACQ,oBekGR,CAGE,cACA,CAJF,iBAIE,6BACA,8BlBgGI,ckBrGN,qCAQI,mBAEA,2EAGE,4BAIJ,+FAKA,uBAGE,CANA,kBAMA,qCAKF,eACE,CALA,eAKA,6BACA,oBAIJ,CACE,kBACA,CrBsEgB,eACS,CqBvEzB,wBrBsEgB,CqBxElB,kBrByE2B,6BA/K3B,4BGuKM,gBkBjEN,iBrBwEkB,eACS,4BGRrB,ckBjEN,iBrBuEc,6CAEa,qBqBlE3B,qBAEE,kBAGF,mBbrEM,6Ba7F2B,oBAyK7B,UHnIc,CG4HlB,kBAOI,CHnIc,kBGqId,ClB4CE,YkB5CF,gCAKE,UACA,CAFF,eACE,CAJF,UAKE,CACA,uBAOF,UHnJc,CGiJlB,iBAEI,ClB8BE,YejLY,CG2IZ,CH3IY,2BGqJd,4BAIJ,mCxBzMkB,kCGalB,CqBkME,eACA,CAHA,QACA,WACA,CAEA,cACA,CrBpMF,iBAkCA,CAnCA,eACA,CAkCA,wBAwLkB,CqB9Ne,iBADC,CrB+NhB,cACS,gBqB/NM,CADC,SAoMhC,CAGA,oBAEA,cACA,2BlBcI,sBkBxBN,8BjBrLwB,2BD6MlB,ckBxBN,iBrB+BkB,eACS,2BGRrB,ckBxBN,gBrB8Bc,mCAEa,2CqBpBzB,0BACE,kMACQ,kCf1MZ,qBD6DwB,CCzDtB,kCAIF,2BAIA,CDiDwB,oCAVL,CgB8JjB,afjNF,CJc4B,uBmBmM1B,ChB9JiB,4BC/CjB,qBAQF,kCgBqCE,kBACQ,CADR,kBACQ,yBAER,CAHA,yBACQ,CAvBV,8CACA,uCAqBE,CAGA,UACA,ChBxCM,oBewMN,CACsE,QC9LxE,CA6BE,eDkKE,CAFF,OAEE,sDClLF,kBACQ,4BAER,CAHA,kBACQ,CADR,yBACQ,CAXV,iDACA,0CASE,CDmLE,oBAGF,CACoE,QCpMtE,CDmME,OCnLA,wBACA,2BD6LE,QAEA,ClBpBE,iBkBxBN,CAoCI,OAMA,CA1CJ,QA4CI,8BACA,2BlBrBE,QkBxBN,uDAiDI,aAGF,iGACE,YAGF,6BAEE,0BlBlCE,kBkBsCN,iCAQE,eACA,CAPE,QAIJ,UAGE,wCACA,YAEA,6BACE,+BlBnDE,QkBuDN,cAEI,iBACA,iCAKJ,+BACE,CALE,cAKF,6BACA,+BAIE,QACA,ClBtEE,oBkB+DN,kBAKI,cAEA,mCACA,iBAGF,CrBnEgB,eACS,CqBkEzB,wBrBnEgB,CACS,kBA/K3B,6BqBoPI,iClB7EE,ckB0EJ,iBrBnEgB,eACS,iCGRrB,ckB0EJ,gBrBpEY,gJAEa,aqB2EvB,cAlTuB,yClB+NrB,akBkFJ,iDxBhTiB,awB+Tf,2CAMJ,eACE,ChB/PsB,cgB+PtB,cACA,cAKE,gBACA,ClB/GE,qBkB6GJ,cAEE,sDACA,aAIA,2BAEE,YAIF,wBRpVF,UACA,CQoVI,URtVN,cAEE,wBUKF,oBAEA,mBACA,CAGA,yBACA,CAJA,mBAGA,CVVE,2BWXF,oBDeA,CAOA,4BAEA,CAIA,kBACQ,CALR,sCAGA,+BACA,CAGA,wBAKA,iBAMI,CAbI,4BAaJ,CAiBJ,2DACE,WAGF,2DAhDA,oBAEA,mBACA,CAGA,yBACA,CAJA,mBAGA,CA2CE,2BAcF,oBA/DA,CAOA,4BAEA,CAIA,kBACQ,CALR,sCAGA,+BACA,CAGA,wBAKA,iBAMI,CAbI,4BAaJ","sources":["webpack://hmlr-webpack/./src/scss/main.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/core/_govuk-frontend-properties.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/core/_links.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/helpers/_typography.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/helpers/_links.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/settings/_links.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/vendor/_sass-mq.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/settings/_typography-font.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/settings/_colours-applied.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/helpers/_focused.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/core/_lists.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/helpers/_spacing.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/core/_typography.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/core/_section-break.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/objects/_button-group.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/objects/_form-group.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/helpers/_clearfix.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/objects/_grid.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/helpers/_grid.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/objects/_main-wrapper.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/objects/_template.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/settings/_measurements.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/objects/_width-container.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/components/footer/_index.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/components/header/_index.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/helpers/_shape-arrow.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/helpers/_visually-hidden.scss","webpack://hmlr-webpack/./node_modules/govuk-frontend/dist/govuk/utilities/_visually-hidden.scss"],"sourcesContent":["$govuk-assets-path: \"../../node_modules/govuk-frontend/dist/govuk/assets/\";\n\n// Override the default HMLR Frontend font stack\n$govuk-font-family: \"Arial\", sans-serif;\n\n// Override the default HMLR Frontend colour\n$govuk-brand-colour: #789904;\n\n// 'Base' includes everything from settings, tools and helpers. Nothing\n// in the base outputs any CSS.\n\n@import \"govuk-frontend/dist/govuk/base\";\n\n// Basic content styles for typography, links etc. Approximately 10% of\n// the CSS output if you include everything.\n\n@import \"govuk-frontend/dist/govuk/core\";\n\n// Objects include things like the page template, grid and form groups.\n// Approximately 5% of the CSS output if you include everything.\n\n@import \"govuk-frontend/dist/govuk/objects\";\n\n// The components themselves - try to only include the components you\n// are using in your project. Approximately 70% of the CSS output if\n// you include everything.\n\n// @import \"govuk-frontend/dist/govuk/components/accordion\";\n// @import \"govuk-frontend/dist/govuk/components/back-link\";\n// @import \"govuk-frontend/dist/govuk/components/breadcrumbs\";\n// @import \"govuk-frontend/dist/govuk/components/button\";\n// @import \"govuk-frontend/dist/govuk/components/character-count\";\n// @import \"govuk-frontend/dist/govuk/components/checkboxes\";\n// @import \"govuk-frontend/dist/govuk/components/cookie-banner\";\n// @import \"govuk-frontend/dist/govuk/components/date-input\";\n// @import \"govuk-frontend/dist/govuk/components/details\";\n// @import \"govuk-frontend/dist/govuk/components/error-message\";\n// @import \"govuk-frontend/dist/govuk/components/error-summary\";\n// @import \"govuk-frontend/dist/govuk/components/exit-this-page\";\n// @import \"govuk-frontend/dist/govuk/components/fieldset\";\n// @import \"govuk-frontend/dist/govuk/components/file-upload\";\n@import \"govuk-frontend/dist/govuk/components/footer\";\n@import \"govuk-frontend/dist/govuk/components/header\";\n// @import \"govuk-frontend/dist/govuk/components/hint\";\n// @import \"govuk-frontend/dist/govuk/components/input\";\n// @import \"govuk-frontend/dist/govuk/components/inset-text\";\n// @import \"govuk-frontend/dist/govuk/components/label\";\n// @import \"govuk-frontend/dist/govuk/components/notification-banner\";\n// @import \"govuk-frontend/dist/govuk/components/pagination\";\n// @import \"govuk-frontend/dist/govuk/components/panel\";\n// @import \"govuk-frontend/dist/govuk/components/password-input\";\n// @import \"govuk-frontend/dist/govuk/components/phase-banner\";\n// @import \"govuk-frontend/dist/govuk/components/radios\";\n// @import \"govuk-frontend/dist/govuk/components/select\";\n// @import \"govuk-frontend/dist/govuk/components/service-navigation\";\n// @import \"govuk-frontend/dist/govuk/components/skip-link\";\n// @import \"govuk-frontend/dist/govuk/components/summary-list\";\n// @import \"govuk-frontend/dist/govuk/components/table\";\n// @import \"govuk-frontend/dist/govuk/components/tabs\";\n// @import \"govuk-frontend/dist/govuk/components/tag\";\n// @import \"govuk-frontend/dist/govuk/components/task-list\";\n// @import \"govuk-frontend/dist/govuk/components/textarea\";\n// @import \"govuk-frontend/dist/govuk/components/warning-text\";\n\n/*\n// Alternatively, you can import all components:\n@import \"govuk-frontend/dist/govuk/components\";\n*/\n\n// Utilities, for example govuk-clearfix or govuk-visually-hidden.\n// Approximately 1% of the CSS output if you include everything.\n\n@import \"govuk-frontend/dist/govuk/utilities\";\n\n// Overrides, used to adjust things like the amount of spacing on an\n// element. Override classes always include `-!-` in the class name.\n// Approximately 15% of the CSS output if you include everything.\n\n// @import \"govuk-frontend/dist/govuk/overrides\";\n\n/*\n// Alternatively, you can import the specific groups of overrides\n// you need for your project:\n\n// Display overrides - for example govuk-!-display-inline\n@import \"govuk-frontend/dist/govuk/overrides/display\";\n\n// Spacing overrides - for example govuk-!-margin-4, govuk-!-static-padding-4\n@import \"govuk-frontend/dist/govuk/overrides/spacing\";\n\n// Text align overrides - for example govuk-!-text-align-left\n@import \"govuk-frontend/dist/govuk/overrides/text-align\";\n\n// Typography overrides - for example govuk-!-font-size-19, govuk-!-font-weight-bold\n@import \"govuk-frontend/dist/govuk/overrides/typography\";\n\n// Width overrides - for example govuk-!-width-two-thirds\n@import \"govuk-frontend/dist/govuk/overrides/width\";\n*/\n",":root {\n  // This variable is automatically overwritten during builds and releases.\n  // It doesn't need to be updated manually.\n  --govuk-frontend-version: \"5.9.0\";\n\n  // CSS custom property for each breakpoint\n  @each $name, $value in $govuk-breakpoints {\n    --govuk-frontend-breakpoint-#{$name}: #{govuk-px-to-rem($value)};\n  }\n}\n\n/*# sourceMappingURL=_govuk-frontend-properties.scss.map */\n","@include govuk-exports(\"govuk/core/links\") {\n  %govuk-link {\n    @include govuk-link-common;\n    @include govuk-link-style-default;\n    @include govuk-link-print-friendly;\n  }\n\n  .govuk-link {\n    @extend %govuk-link;\n  }\n\n  // Variant classes should always be used in conjunction with the .govuk-link\n  // class, so we do not need the common link styles as they will be inherited.\n\n  .govuk-link--muted {\n    @include govuk-link-style-muted;\n  }\n\n  .govuk-link--text-colour {\n    @include govuk-link-style-text;\n  }\n\n  .govuk-link--inverse {\n    @include govuk-link-style-inverse;\n  }\n\n  .govuk-link--no-underline {\n    @include govuk-link-style-no-underline;\n  }\n\n  .govuk-link--no-visited-state {\n    @include govuk-link-style-no-visited-state;\n  }\n\n  // Links that only contain images\n\n  .govuk-link-image {\n    @include govuk-link-image;\n  }\n}\n\n/*# sourceMappingURL=_links.scss.map */\n","////\n/// @group helpers/typography\n////\n\n@import \"../tools/px-to-rem\";\n\n/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  @if $govuk-include-default-font-face {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Tabular number helper\n///\n/// Switches numerical glyphs (0–9) to use alternative forms with a\n/// monospaced bounding box. This ensures that columns of numbers, such\n/// as those in tables, remain horizontally aligned with one another.\n/// This also has the useful side effect of making numbers more legible\n/// in some situations, such as reference codes, as the numbers are more\n/// distinct and visually separated from one another.\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-font-tabular-numbers($important: false) {\n  font-variant-numeric: tabular-nums if($important, !important, null);\n}\n\n/// Word break helper\n///\n/// Forcibly breaks long words that lack spaces, such as email addresses,\n/// across multiple lines when they wouldn't otherwise fit.\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally used to create override classes.\n/// @access public\n\n@mixin govuk-text-break-word($important: false) {\n  // IE 11 and Edge 16–17 only support the non-standard `word-wrap` property\n  word-wrap: break-word if($important, !important, null);\n\n  // All other browsers support `overflow-wrap`\n  overflow-wrap: break-word if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Font size and line height helper\n///\n/// @param {Number} $size - Point from the type scale (the size as it would\n///   appear on tablet and above)\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @throw if `$size` is not a valid point from the type scale\n///\n/// @access public\n///\n/// @alias govuk-font-size\n/// @deprecated Use `govuk-font-size` instead\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n  @include _warning(\n    \"govuk-typography-responsive\",\n    \"govuk-typography-responsive is deprecated. Use govuk-font-size instead.\"\n  );\n  @include govuk-font-size($size, $override-line-height, $important);\n}\n\n/// Font size and line height helper\n///\n/// Takes a point from the responsive 'font map' as an argument (the size as it\n/// would appear on tablet and above), and uses it to create font-size and\n/// line-height declarations for different breakpoints, and print.\n///\n/// Example font map:\n///\n/// ```scss\n/// 19: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n/// ```\n///\n/// @param {Number | String} $size - Point from the type scale (the size as\n///   it would appear on tablet and above)\n/// @param {Number} $line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @throw if `$size` is not a valid point from the type scale\n///\n/// @access public\n\n@mixin govuk-font-size($size, $line-height: false, $important: false) {\n  // Flag font sizes that start with underscores so we can suppress warnings on\n  // deprecated sizes used internally, for example `govuk-font($size: \"_14\")`\n  $size-internal-use-only: str-slice(#{$size}, 1, 1) == \"_\";\n\n  // Remove underscore from font sizes flagged for internal use\n  @if $size-internal-use-only {\n    $size: str-slice(#{$size}, 2);\n  }\n\n  // Check for a font map exactly matching the given size\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  // No match? Try with string type (e.g. $size: \"16\" not 16)\n  @if not $font-map {\n    @each $font-size in map-keys($govuk-typography-scale) {\n      @if not $font-map and #{$font-size} == #{$size} {\n        $font-map: map-get($govuk-typography-scale, $font-size);\n      }\n    }\n  }\n\n  // Still no match? Throw error\n  @if not $font-map {\n    @error \"Unknown font size `#{$size}` - expected a point from the type scale.\";\n  }\n\n  // Check for a deprecation within the type scale\n  $deprecation: map-get($font-map, \"deprecation\");\n\n  @if $deprecation {\n    // Warn on deprecated font sizes unless flagged for internal use\n    @if not $size-internal-use-only {\n      @include _warning(map-get($deprecation, \"key\"), map-get($deprecation, \"message\"));\n    }\n\n    // remove the deprecation map keys so they do not break the breakpoint loop\n    $font-map: map-remove($font-map, \"deprecation\");\n  }\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, \"font-size\");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    // $calculated-line-height is a separate variable from $line-height,\n    // as otherwise the value would get redefined with each loop and\n    // eventually break _govuk-line-height.\n    //\n    // We continue to call the param $line-height to stay consistent with the\n    // naming with govuk-font.\n    $calculated-line-height: _govuk-line-height(\n      $line-height: if($line-height, $line-height, map-get($breakpoint-map, \"line-height\")),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $calculated-line-height: $calculated-line-height if($important, !important, null);\n\n    @if not $breakpoint {\n      font-size: $font-size-rem;\n      line-height: $calculated-line-height;\n    } @else if $breakpoint == \"print\" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $calculated-line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size-rem;\n        line-height: $calculated-line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number | Boolean | String} $size Point from the type scale (the\n///   size as it would appear on tablet and above). Use `false` to avoid setting\n///   a size.\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the\n///   default\n///\n/// @throw if `$size` is not a valid point from the type scale (or false)\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @include govuk-typography-common;\n\n  @if $tabular {\n    @include govuk-font-tabular-numbers;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-font-size($size, $line-height);\n  }\n}\n\n/*# sourceMappingURL=_typography.scss.map */\n","////\n/// @group helpers/links\n////\n\n/// Common link styles\n///\n/// Provides the typography and focus state, regardless of link style.\n///\n/// @access public\n\n@mixin govuk-link-common {\n  @include govuk-typography-common;\n  @include govuk-link-decoration;\n\n  &:hover {\n    @include govuk-link-hover-decoration;\n  }\n\n  &:focus {\n    @include govuk-focused-text;\n  }\n}\n\n/// Link decoration\n///\n/// Provides the text decoration for links, including thickness and underline\n/// offset. Use this mixin only if you cannot use the `govuk-link-common` mixin.\n///\n/// @access public\n@mixin govuk-link-decoration {\n  text-decoration: underline;\n\n  @if $govuk-link-underline-thickness {\n    text-decoration-thickness: $govuk-link-underline-thickness;\n  }\n\n  @if $govuk-link-underline-offset {\n    text-underline-offset: $govuk-link-underline-offset;\n  }\n}\n\n/// Link hover decoration\n///\n/// Provides the text decoration for links in their hover state, for you to use\n/// within a `:hover` pseudo-selector. Use this mixin only if you cannot use the\n/// `govuk-link-common` mixin.\n///\n/// @access public\n\n@mixin govuk-link-hover-decoration {\n  @if $govuk-link-hover-underline-thickness {\n    text-decoration-thickness: $govuk-link-hover-underline-thickness;\n    // Disable ink skipping on underlines on hover. Browsers haven't\n    // standardised on this part of the spec yet, so set both properties\n    -webkit-text-decoration-skip-ink: none;\n            text-decoration-skip-ink: none; // Chromium, Firefox\n    -webkit-text-decoration-skip: none;\n            text-decoration-skip: none; // Safari\n  }\n}\n\n/// Default link styles\n///\n/// Makes links use the default unvisited, visited, hover and active colours.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-default;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-default {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-visited-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n}\n\n/// Error link styles\n///\n/// Makes links use the error colour. The link will darken if it's active or a\n/// user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-error;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-error {\n  &:link,\n  &:visited {\n    color: $govuk-error-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-error-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-error-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n}\n\n/// Success link styles\n///\n/// Makes links use the success colour. The link will darken if it's active or a\n/// user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-success;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-success {\n  &:link,\n  &:visited {\n    color: $govuk-success-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-success-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-success-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n}\n\n/// Muted link styles\n///\n/// Makes links use the secondary text colour. The link will darken if it's\n/// active or a user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-muted;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-muted {\n  &:link,\n  &:visited {\n    color: $govuk-secondary-text-colour;\n  }\n\n  &:hover,\n  &:active {\n    color: $govuk-text-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n}\n\n/// Text link styles\n///\n/// Makes links use the primary text colour, in all states. Use this mixin for\n/// navigation components, such as breadcrumbs or the back link.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-text;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-text {\n  &:link,\n  &:visited {\n    @include govuk-text-colour;\n  }\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://webkit.org/b/224483\n  &:hover {\n    @if type-of($govuk-text-colour) == color {\n      color: rgba($govuk-text-colour, 0.99);\n    }\n  }\n\n  &:active,\n  &:focus {\n    @include govuk-text-colour;\n  }\n}\n\n/// Inverse link styles\n///\n/// Makes links white, in all states. Use this mixin if you're displaying links\n/// against a dark background.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-inverse;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-inverse {\n  &:link,\n  &:visited {\n    color: govuk-colour(\"white\");\n  }\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://webkit.org/b/224483\n  &:hover,\n  &:active {\n    color: rgba(govuk-colour(\"white\"), 0.99);\n  }\n\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n}\n\n/// Default link styles, without a visited state\n///\n/// Makes links use the default unvisited, hover and active colours, with no\n/// distinct visited state.\n///\n/// Use this mixin when it's not helpful to distinguish between visited and\n/// non-visited links. For example, when you link to pages with\n/// frequently-changing content, such as the dashboard for an admin interface.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-no-visited-state;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-no-visited-state {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n}\n\n/// Remove underline from links\n///\n/// Remove underlines from links unless the link is active or a user hovers\n/// their cursor over it.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-default;\n///     @include govuk-link-style-no-underline;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-no-underline {\n  &:not(:hover):not(:active) {\n    text-decoration: none;\n  }\n}\n\n/// Include link destination when printing the page\n///\n/// If the user prints the page, add the destination URL after the link text, if\n/// the URL starts with `/`, `http://` or `https://`.\n///\n/// @access public\n\n@mixin govuk-link-print-friendly {\n  @include govuk-media-query($media-type: print) {\n    &[href^=\"/\"],\n    &[href^=\"http://\"],\n    &[href^=\"https://\"]\n    {\n      &::after {\n        content: \" (\" attr(href) \")\";\n        font-size: 90%;\n\n        // Because the URLs may be very long, ensure that they may be broken\n        // at arbitrary points if there are no otherwise acceptable break\n        // points in the line\n        word-wrap: break-word;\n      }\n    }\n  }\n}\n\n/// Image link styles\n///\n/// Prepares and provides the focus state for links that only contain images\n/// with no accompanying text.\n///\n/// @access public\n\n@mixin govuk-link-image {\n  // Needed to draw the focus around the entire image\n  display: inline-block;\n\n  // Remove extra space at the bottom of the image that's added by line-height\n  line-height: 0;\n\n  // Don't render an underline\n  text-decoration: none;\n\n  &:focus {\n    @include govuk-focused-box;\n  }\n}\n\n/*# sourceMappingURL=_links.scss.map */\n","////\n/// @group settings/links\n////\n\n/// Thickness of link underlines\n///\n/// The default will be either:\n///\n///  - 1px\n///  - 0.0625rem, if it's thicker than 1px because the user has changed the text\n///    size in their browser\n///\n/// Set this variable to `false` to avoid setting a thickness.\n///\n/// @type Number\n/// @access public\n\n$govuk-link-underline-thickness: unquote(\"max(1px, .0625rem)\") !default;\n\n/// Offset of link underlines from text baseline\n///\n/// The default is 3px expressed as ems, as calculated against the default body\n/// font size (on desktop) of 19px.\n/// 3 ÷ 19 = 0.1578\n///\n/// Set this variable to `false` to avoid setting an offset.\n///\n/// @type Number\n/// @access public\n\n$govuk-link-underline-offset: 0.1578em !default;\n\n/// Thickness of link underlines in hover state\n///\n/// The default for each link will be the thickest of the following:\n///\n///  - 3px\n///  - 0.1875rem, if it's thicker than 3px because the user has changed the text\n///    size in their browser\n///  - 0.12em (relative to the link's text size)\n///\n/// Set this variable to `false` to avoid setting a thickness.\n///\n/// @type Number\n/// @access public\n\n$govuk-link-hover-underline-thickness: unquote(\"max(3px, .1875rem, .12em)\") !default;\n\n/*# sourceMappingURL=_links.scss.map */\n","// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body::before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n\n/*# sourceMappingURL=_sass-mq.scss.map */\n","////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: \"GDS Transport\", arial, sans-serif !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// Defaults to true if \"GDS Transport\" appears in the $govuk-font-family\n/// setting.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: if(index($govuk-font-family, \"GDS Transport\"), true, false) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n\n/*# sourceMappingURL=_typography-font.scss.map */\n","////\n/// @group settings/colours\n////\n\n@import \"../helpers/colour\";\n\n// =========================================================\n// Generic\n// =========================================================\n\n/// Brand colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-brand-colour: govuk-colour(\"blue\") !default;\n\n/// Text colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-text-colour: govuk-colour(\"black\") !default;\n\n/// Canvas background colour\n///\n/// Used by the footer component and template to give the illusion of a long\n/// footer.\n///\n/// @type Colour\n/// @access public\n\n$govuk-canvas-background-colour: govuk-colour(\"light-grey\") !default;\n\n/// Body background colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-body-background-colour: govuk-colour(\"white\") !default;\n\n/// Text colour for print media\n///\n/// Use 'true black' to avoid printers using colour ink to print body text\n///\n/// @type Colour\n/// @access public\n\n$govuk-print-text-colour: #000000 !default;\n\n/// Secondary text colour\n///\n/// Used in for example 'muted' text and help text.\n///\n/// @type Colour\n/// @access public\n\n$govuk-secondary-text-colour: govuk-colour(\"dark-grey\") !default;\n\n/// Focus colour\n///\n/// Used for outline (and background, where appropriate) when interactive\n/// elements (links, form controls) have keyboard focus.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-colour: govuk-colour(\"yellow\") !default;\n\n/// Focused text colour\n///\n/// Ensure that the contrast between the text and background colour passes\n/// WCAG Level AA contrast requirements.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-text-colour: govuk-colour(\"black\") !default;\n\n/// Error colour\n///\n/// Used to highlight error messages and form controls in an error state\n///\n/// @type Colour\n/// @access public\n\n$govuk-error-colour: govuk-colour(\"red\") !default;\n\n/// Success colour\n///\n/// Used to highlight success messages and banners\n///\n/// @type Colour\n/// @access public\n\n$govuk-success-colour: govuk-colour(\"green\") !default;\n\n/// Border colour\n///\n/// Used in for example borders, separators, rules and keylines.\n///\n/// @type Colour\n/// @access public\n\n$govuk-border-colour: govuk-colour(\"mid-grey\") !default;\n\n/// Input border colour\n///\n/// Used for form inputs and controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-input-border-colour: govuk-colour(\"black\") !default;\n\n/// Input hover colour\n///\n/// Used for hover states on form controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-hover-colour: govuk-colour(\"mid-grey\") !default;\n\n// =============================================================================\n// Links\n// =============================================================================\n\n/// Link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-colour: govuk-colour(\"blue\") !default;\n\n/// Visited link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-visited-colour: govuk-colour(\"purple\") !default;\n\n/// Link hover colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-hover-colour: govuk-colour(\"dark-blue\") !default;\n\n/// Active link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-active-colour: govuk-colour(\"black\") !default;\n\n/*# sourceMappingURL=_colours-applied.scss.map */\n","////\n/// @group helpers/accessibility\n////\n\n/// Focused text\n///\n/// Provides an outline to clearly indicate when the target element is focused.\n/// Used for interactive text-based elements.\n///\n/// @access public\n\n@mixin govuk-focused-text {\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there's a\n  // transparent outline which will be set to a visible colour.\n\n  outline: $govuk-focus-width solid transparent;\n  color: $govuk-focus-text-colour;\n  background-color: $govuk-focus-colour;\n  box-shadow:\n    0 -2px $govuk-focus-colour,\n    0 4px $govuk-focus-text-colour;\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the \"underline\"\n  text-decoration: none;\n\n  // When a focused box is broken by e.g. a line break, ensure that the\n  // box-shadow is applied to each fragment independently.\n  -webkit-box-decoration-break: clone;\n          box-decoration-break: clone;\n}\n\n/// Focused box\n///\n/// Provides an outline to clearly indicate when the target element is focused.\n/// Unlike govuk-focused-text, which only draws an underline below the element,\n/// govuk-focused-box draws an outline around all sides of the element.\n/// Best used for non-text content contained within links.\n///\n/// @access public\n\n@mixin govuk-focused-box {\n  outline: $govuk-focus-width solid transparent;\n  box-shadow:\n    0 0 0 4px $govuk-focus-colour,\n    0 0 0 8px $govuk-focus-text-colour;\n}\n\n/*# sourceMappingURL=_focused.scss.map */\n","@include govuk-exports(\"govuk/core/lists\") {\n  %govuk-list {\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n    margin-top: 0;\n    @include govuk-responsive-margin(4, \"bottom\");\n    padding-left: 0;\n    list-style-type: none;\n\n    // Add a top margin for nested lists\n    %govuk-list {\n      margin-top: govuk-spacing(2);\n    }\n  }\n\n  %govuk-list > li {\n    // Lists without numbers or bullets should always have extra space between\n    // list items. Lists with numbers or bullets only have this extra space on\n    // tablet and above\n    margin-bottom: govuk-spacing(1);\n  }\n\n  .govuk-list {\n    @extend %govuk-list;\n  }\n\n  %govuk-list--bullet {\n    padding-left: govuk-spacing(4);\n    list-style-type: disc;\n  }\n\n  %govuk-list--number {\n    padding-left: govuk-spacing(4);\n    list-style-type: decimal;\n  }\n\n  %govuk-list--bullet > li,\n  %govuk-list--number > li {\n    margin-bottom: 0;\n\n    @include govuk-media-query($from: tablet) {\n      margin-bottom: govuk-spacing(1);\n    }\n  }\n\n  %govuk-list--spaced > li {\n    margin-bottom: govuk-spacing(2);\n\n    @include govuk-media-query($from: tablet) {\n      margin-bottom: govuk-spacing(3);\n    }\n  }\n\n  .govuk-list--bullet {\n    @extend %govuk-list--bullet;\n  }\n\n  .govuk-list--number {\n    @extend %govuk-list--number;\n  }\n\n  .govuk-list--spaced {\n    @extend %govuk-list--spaced;\n  }\n}\n\n/*# sourceMappingURL=_lists.scss.map */\n","////\n/// @group helpers/spacing\n////\n\n/// Single point spacing\n///\n/// Returns measurement corresponding to the spacing point requested.\n///\n/// @param {Number} $spacing-point - Point on the spacing scale\n///  (set in `settings/_spacing.scss`)\n///\n/// @returns {String} Spacing measurement eg. 10px\n///\n/// @example scss\n///   .element {\n///     padding: govuk-spacing(5);\n///   }\n///\n/// @example scss Using negative spacing\n///   .element {\n///     margin-top: govuk-spacing(-1);\n///   }\n///\n/// @example scss Marking spacing declarations as important\n///   .element {\n///     margin-top: govuk-spacing(1) !important;\n///   }\n///\n/// @access public\n\n@function govuk-spacing($spacing-point) {\n  $actual-input-type: type-of($spacing-point);\n  @if $actual-input-type != \"number\" {\n    @error \"Expected a number (integer), but got a \"\n      + \"#{$actual-input-type}.\";\n  }\n\n  $is-negative: false;\n  @if $spacing-point < 0 {\n    $is-negative: true;\n    $spacing-point: abs($spacing-point);\n  }\n\n  @if not map-has-key($govuk-spacing-points, $spacing-point) {\n    @error \"Unknown spacing variable `#{$spacing-point}`. Make sure you are using a point from the spacing scale in `_settings/spacing.scss`.\";\n  }\n\n  $value: map-get($govuk-spacing-points, $spacing-point);\n  @return if($is-negative, $value * -1, $value);\n}\n\n/// Responsive spacing\n///\n/// Adds responsive spacing (either padding or margin, depending on `$property`)\n/// by fetching a 'spacing map' from the responsive spacing scale, which defines\n/// different spacing values at different breakpoints.\n///\n/// To generate responsive spacing, use 'govuk-responsive-margin' or\n/// 'govuk-responsive-padding' mixins\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $property - Property to add spacing to (e.g. 'margin')\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @access private\n\n@mixin _govuk-responsive-spacing(\n  $responsive-spacing-point,\n  $property,\n  $direction: \"all\",\n  $important: false,\n  $adjustment: false\n) {\n  $actual-input-type: type-of($responsive-spacing-point);\n  @if $actual-input-type != \"number\" {\n    @error \"Expected a number (integer), but got a \" + \"#{$actual-input-type}.\";\n  }\n\n  @if not map-has-key($govuk-spacing-responsive-scale, $responsive-spacing-point) {\n    @error \"Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the \"\n      + \"responsive spacing scale in `_settings/spacing.scss`.\";\n  }\n\n  // Make sure that the return value from `_settings/spacing.scss` is a map.\n  $scale-map: map-get($govuk-spacing-responsive-scale, $responsive-spacing-point);\n  $actual-map-type: type-of($scale-map);\n  @if $actual-map-type != \"map\" {\n    @error \"Expected a number (integer), but got a \"\n      + \"#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)\";\n  }\n\n  // Loop through each breakpoint in the map\n  @each $breakpoint, $breakpoint-value in $scale-map {\n    @if $adjustment {\n      $breakpoint-value: $breakpoint-value + $adjustment;\n    }\n\n    // The 'null' breakpoint is for mobile.\n    @if not $breakpoint {\n      @if $direction == all {\n        #{$property}: $breakpoint-value if($important, !important, null);\n      } @else {\n        #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        @if $direction == all {\n          #{$property}: $breakpoint-value if($important, !important, null);\n        } @else {\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n        }\n      }\n    }\n  }\n}\n\n/// Responsive margin\n///\n/// Adds responsive margin by fetching a 'spacing map' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n/// scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-margin(6, \"left\", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-margin($responsive-spacing-point, $direction: \"all\", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, \"margin\", $direction, $important, $adjustment);\n}\n\n/// Responsive padding\n///\n/// Adds responsive padding by fetching a 'spacing map' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-padding(6, \"left\", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-padding($responsive-spacing-point, $direction: \"all\", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, \"padding\", $direction, $important, $adjustment);\n}\n\n/*# sourceMappingURL=_spacing.scss.map */\n","@include govuk-exports(\"govuk/core/typography\") {\n  // Headings\n\n  %govuk-heading-xl {\n    @include govuk-text-colour;\n    @include govuk-font($size: 48, $weight: bold);\n\n    display: block;\n\n    margin-top: 0;\n    @include govuk-responsive-margin(8, \"bottom\");\n  }\n\n  .govuk-heading-xl {\n    @extend %govuk-heading-xl;\n  }\n\n  %govuk-heading-l {\n    @include govuk-text-colour;\n    @include govuk-font($size: 36, $weight: bold);\n\n    display: block;\n\n    margin-top: 0;\n    @include govuk-responsive-margin(6, \"bottom\");\n  }\n\n  .govuk-heading-l {\n    @extend %govuk-heading-l;\n  }\n\n  %govuk-heading-m {\n    @include govuk-text-colour;\n    @include govuk-font($size: 24, $weight: bold);\n\n    display: block;\n\n    margin-top: 0;\n    @include govuk-responsive-margin(4, \"bottom\");\n  }\n\n  .govuk-heading-m {\n    @extend %govuk-heading-m;\n  }\n\n  %govuk-heading-s {\n    @include govuk-text-colour;\n    @include govuk-font($size: 19, $weight: bold);\n\n    display: block;\n\n    margin-top: 0;\n    @include govuk-responsive-margin(4, \"bottom\");\n  }\n\n  .govuk-heading-s {\n    @extend %govuk-heading-s;\n  }\n\n  // Captions to be used inside headings\n\n  .govuk-caption-xl {\n    @include govuk-font($size: 27);\n\n    display: block;\n\n    margin-bottom: govuk-spacing(1);\n\n    color: $govuk-secondary-text-colour;\n  }\n\n  .govuk-caption-l {\n    @include govuk-font($size: 24);\n\n    display: block;\n\n    margin-bottom: govuk-spacing(1);\n    color: $govuk-secondary-text-colour;\n\n    @include govuk-media-query($from: tablet) {\n      margin-bottom: 0;\n    }\n  }\n\n  .govuk-caption-m {\n    @include govuk-font($size: 19);\n\n    display: block;\n\n    color: $govuk-secondary-text-colour;\n  }\n\n  // Body (paragraphs)\n\n  %govuk-body-l {\n    @include govuk-text-colour;\n    @include govuk-font($size: 24);\n\n    margin-top: 0;\n    @include govuk-responsive-margin(6, \"bottom\");\n  }\n\n  .govuk-body-l {\n    @extend %govuk-body-l;\n  }\n\n  %govuk-body-m {\n    @include govuk-text-colour;\n    @include govuk-font($size: 19);\n\n    margin-top: 0;\n    @include govuk-responsive-margin(4, \"bottom\");\n  }\n\n  .govuk-body-m {\n    @extend %govuk-body-m;\n  }\n\n  %govuk-body-s {\n    @include govuk-text-colour;\n    @include govuk-font($size: 16);\n\n    margin-top: 0;\n    @include govuk-responsive-margin(4, \"bottom\");\n  }\n\n  .govuk-body-s {\n    @extend %govuk-body-s;\n  }\n\n  // @deprecated\n  %govuk-body-xs {\n    @include govuk-text-colour;\n    @include govuk-font($size: _14);\n\n    margin-top: 0;\n    @include govuk-responsive-margin(4, \"bottom\");\n  }\n\n  // @deprecated\n  .govuk-body-xs {\n    @extend %govuk-body-xs;\n  }\n\n  // Usage aliases\n\n  // Using extend to alias means we also inherit any contextual adjustments that\n  // refer to the 'original' class name\n\n  .govuk-body-lead {\n    @extend %govuk-body-l;\n  }\n\n  .govuk-body {\n    @extend %govuk-body-m;\n  }\n\n  // Contextual adjustments\n  // Add top padding to headings that appear directly after paragraphs.\n\n  %govuk-body-l + %govuk-heading-l {\n    padding-top: govuk-spacing(1);\n\n    @include govuk-media-query($from: tablet) {\n      padding-top: govuk-spacing(2);\n    }\n  }\n\n  %govuk-body-m + %govuk-heading-l,\n  %govuk-body-s + %govuk-heading-l,\n  %govuk-list + %govuk-heading-l {\n    @include govuk-responsive-padding(4, \"top\");\n  }\n\n  %govuk-body-m + %govuk-heading-m,\n  %govuk-body-s + %govuk-heading-m,\n  %govuk-list + %govuk-heading-m,\n  %govuk-body-m + %govuk-heading-s,\n  %govuk-body-s + %govuk-heading-s,\n  %govuk-list + %govuk-heading-s {\n    padding-top: govuk-spacing(1);\n\n    @include govuk-media-query($from: tablet) {\n      padding-top: govuk-spacing(2);\n    }\n  }\n}\n\n/*# sourceMappingURL=_typography.scss.map */\n","@include govuk-exports(\"govuk/core/section-break\") {\n  %govuk-section-break {\n    margin: 0;\n    border: 0;\n  }\n\n  .govuk-section-break {\n    @extend %govuk-section-break;\n  }\n\n  // Sizes\n\n  %govuk-section-break--xl {\n    @include govuk-responsive-margin(8, \"top\");\n    @include govuk-responsive-margin(8, \"bottom\");\n  }\n\n  .govuk-section-break--xl {\n    @extend %govuk-section-break--xl;\n  }\n\n  %govuk-section-break--l {\n    @include govuk-responsive-margin(6, \"top\");\n    @include govuk-responsive-margin(6, \"bottom\");\n  }\n\n  .govuk-section-break--l {\n    @extend %govuk-section-break--l;\n  }\n\n  %govuk-section-break--m {\n    @include govuk-responsive-margin(4, \"top\");\n    @include govuk-responsive-margin(4, \"bottom\");\n  }\n\n  .govuk-section-break--m {\n    @extend %govuk-section-break--m;\n  }\n\n  // Visible variant\n\n  %govuk-section-break--visible {\n    border-bottom: 1px solid $govuk-border-colour;\n  }\n\n  .govuk-section-break--visible {\n    @extend %govuk-section-break--visible;\n  }\n}\n\n/*# sourceMappingURL=_section-break.scss.map */\n","@import \"../base\";\n\n@include govuk-exports(\"govuk/objects/button-group\") {\n  // Button groups can be used to group buttons and links together as a group.\n  //\n  // Within a button group:\n  //\n  // - links are styled to line up visually with the buttons, including being\n  //   centre-aligned on mobile\n  // - spacing between the buttons and links is handled automatically, including\n  //   when they wrap across multiple lines\n  .govuk-button-group {\n    $horizontal-gap: govuk-spacing(3);\n    $vertical-gap: govuk-spacing(3);\n\n    // These need to be kept in sync with the button component's styles\n    $button-padding: govuk-spacing(2);\n    $button-shadow-size: $govuk-border-width-form-element;\n\n    $link-spacing: govuk-spacing(1);\n\n    @include govuk-responsive-margin(6, \"bottom\", $adjustment: $vertical-gap * -1);\n\n    // Flexbox is used to center-align links on mobile, align everything along\n    // the baseline on tablet and above, and to removes extra whitespace that\n    // we'd get between the buttons and links because they're inline-blocks.\n    //\n    // Ideally we'd use `gap` with flexbox rather than having to do it all with\n    // margins, but unfortunately the support isn't there (yet) and @supports\n    // doesn't play nicely with it\n    // (https://github.com/w3c/csswg-drafts/issues/3559)\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    // Give links within the button group the same font-size and line-height\n    // as buttons.\n    //\n    // Because we want the focus state to be tight around the link text, we use\n    // margins where the buttons would use padding.\n    .govuk-link {\n      @include govuk-font($size: 19, $line-height: 19px);\n      display: inline-block;\n      // Prevent links overflowing their container in IE10/11 because of bug\n      // with align-items: center\n      max-width: 100%;\n      margin-top: $link-spacing;\n      margin-bottom: $link-spacing + $vertical-gap;\n      text-align: center;\n    }\n\n    // Reduce the bottom margin to the size of the vertical gap (accommodating\n    // the button shadow) – the 'lost' margin is moved to the button-group.\n    .govuk-button {\n      margin-bottom: $vertical-gap + $button-shadow-size;\n    }\n\n    // On tablet and above, we also introduce a 'column gap' between the\n    // buttons and links in each row and left align links\n    @include govuk-media-query($from: tablet) {\n      // Cancel out the column gap for the last item in each row\n      margin-right: ($horizontal-gap * -1);\n\n      flex-direction: row;\n      flex-wrap: wrap;\n      align-items: baseline;\n\n      .govuk-button,\n      .govuk-link {\n        margin-right: $horizontal-gap;\n      }\n\n      .govuk-link {\n        text-align: left;\n      }\n    }\n  }\n}\n\n/*# sourceMappingURL=_button-group.scss.map */\n","@import \"../base\";\n\n@include govuk-exports(\"govuk/objects/form-group\") {\n  .govuk-form-group {\n    @include govuk-clearfix;\n    @include govuk-responsive-margin(6, \"bottom\");\n\n    .govuk-form-group:last-of-type {\n      margin-bottom: 0; // Remove margin from last item in nested groups\n    }\n  }\n\n  .govuk-form-group--error {\n    padding-left: govuk-spacing(3);\n    border-left: $govuk-border-width-form-group-error solid $govuk-error-colour;\n\n    .govuk-form-group {\n      // Reset error styles in nested form groups that might have error class\n      padding: 0;\n      border: 0;\n    }\n  }\n}\n\n/*# sourceMappingURL=_form-group.scss.map */\n","////\n/// @group helpers/layout\n////\n\n/// Clear floated content within a container using a pseudo element\n///\n/// @access public\n\n@mixin govuk-clearfix {\n  &::after {\n    content: \"\";\n    display: block;\n    clear: both;\n  }\n}\n\n/*# sourceMappingURL=_clearfix.scss.map */\n","@import \"../base\";\n\n@include govuk-exports(\"govuk/objects/grid\") {\n  .govuk-grid-row {\n    @include govuk-clearfix;\n    margin-right: -($govuk-gutter-half);\n    margin-left: -($govuk-gutter-half);\n  }\n\n  @each $width in map-keys($govuk-grid-widths) {\n    .govuk-grid-column-#{$width} {\n      @include govuk-grid-column($width);\n    }\n  }\n\n  // These *must* be defined in a separate loop as they have the same\n  // specificity as the non-breakpoint specific classes, so need to appear after\n  // them in the outputted CSS\n  @each $width in map-keys($govuk-grid-widths) {\n    .govuk-grid-column-#{$width}-from-desktop {\n      @include govuk-grid-column($width, $at: desktop);\n    }\n  }\n}\n\n/*# sourceMappingURL=_grid.scss.map */\n","////\n/// @group helpers/layout\n////\n\n/// Grid width percentage\n///\n/// @param {String} $key - Name of grid width (e.g. two-thirds)\n/// @return {Number} Percentage width\n/// @throw if `$key` is not a valid grid width\n/// @access public\n\n@function govuk-grid-width($key) {\n  @if map-has-key($govuk-grid-widths, $key) {\n    @return map-get($govuk-grid-widths, $key);\n  }\n\n  @error \"Unknown grid width `#{$key}`\";\n}\n\n/// Generate grid column styles\n///\n/// Creates a grid column with standard gutter between the columns.\n///\n/// Grid widths are defined in the `$govuk-grid-widths` map.\n///\n/// By default the column width changes from 100% to specified width at the\n/// 'tablet' breakpoint, but other breakpoints can be specified using the `$at`\n/// parameter.\n///\n/// @param {String} $width [full] name of a grid width from $govuk-grid-widths\n/// @param {String} $float [left] left | right\n/// @param {String} $at [tablet] - mobile | tablet | desktop | any custom breakpoint\n///\n/// @example scss - Default\n///   .govuk-grid-column-two-thirds {\n///     @include govuk-grid-column(two-thirds)\n///   }\n///\n/// @example scss - Customising the breakpoint where width percentage is applied\n///   .govuk-grid-column-one-half-from-desktop {\n///     @include govuk-grid-column(one-half, $at: desktop);\n///   }\n///\n/// @example scss - Customising the float direction\n///   .govuk-grid-column-one-half-right {\n///     @include govuk-grid-column(two-thirds, $float: right);\n///   }\n///\n/// @access public\n\n@mixin govuk-grid-column($width: full, $float: left, $at: tablet) {\n  box-sizing: border-box;\n  @if $at != desktop {\n    width: 100%;\n  }\n  padding: 0 $govuk-gutter-half;\n  @include govuk-media-query($from: $at) {\n    width: govuk-grid-width($width);\n    float: $float;\n  }\n}\n\n/*# sourceMappingURL=_grid.scss.map */\n","@import \"../base\";\n\n////\n/// @group objects/layout\n////\n\n// Example usage with Breadcrumbs, phase banners, back links:\n// <div class=\"govuk-width-container\">\n//   <!-- Breadcrumbs, phase banners, back links are placed in here. -->\n//   <div class=\"govuk-main-wrapper\">\n//       <!-- Wrapper for the main content of your page which applies padding\n//            to the top / bottom -->\n//   </div>\n// </div>\n//\n// Example usage without Breadcrumbs, phase banners, back links:\n// <div class=\"govuk-width-container\">\n//   <div class=\"govuk-main-wrapper govuk-main-wrapper--l\">\n//       <!-- Wrapper for the main content of your page which applies padding\n//            to the top / bottom -->\n//   </div>\n// </div>\n\n@include govuk-exports(\"govuk/objects/main-wrapper\") {\n  .govuk-main-wrapper {\n    // In IE11 the `main` element can be used, but is not recognized  –\n    // meaning it's not defined in IE's default style sheet,\n    // so it uses CSS initial value, which is inline.\n    display: block;\n    padding-top: govuk-spacing(4);\n    padding-bottom: govuk-spacing(4);\n\n    @include govuk-media-query($from: tablet) {\n      // This spacing is manually adjusted to replicate the margin of\n      // govuk-heading-xl (50px) minus the spacing of back link and\n      // breadcrumbs (10px)\n      padding-top: govuk-spacing(7);\n      padding-bottom: govuk-spacing(7);\n    }\n  }\n\n  // Using the `.govuk-main-wrapper--auto-spacing` modifier should apply the\n  // correct spacing depending on whether there are any elements\n  // (such the back link, breadcrumbs or phase banner components) before the\n  // `.govuk-main-wrapper` in the `govuk-width-container`.\n  //\n  // If you need to control the spacing manually, use the\n  // `govuk-main-wrapper--l` modifier instead.\n  .govuk-main-wrapper--auto-spacing:first-child,\n  .govuk-main-wrapper--l {\n    @include govuk-responsive-padding(8, \"top\");\n  }\n}\n\n/*# sourceMappingURL=_main-wrapper.scss.map */\n","@import \"../base\";\n\n@include govuk-exports(\"govuk/objects/template\") {\n  // Applied to the <html> element\n  .govuk-template {\n    // Set the overall page background colour to the same colour as used by the\n    // footer to give the illusion of a long footer.\n    background-color: $govuk-canvas-background-colour;\n\n    // Prevent automatic text sizing, as we already cater for small devices and\n    // would like the browser to stay on 100% text zoom by default.\n    -webkit-text-size-adjust: 100%;\n       -moz-text-size-adjust: 100%;\n            text-size-adjust: 100%;\n\n    // Add scroll padding to the top of govuk-template but remove it if the\n    // exit this page component is present.\n    //\n    // This is a solution to exit this page potentially failing WCAG SC 2.4.12:\n    // Focus Not Obscured (https://www.w3.org/WAI/WCAG22/Understanding/focus-not-obscured-minimum.html)\n    // due to it's sticky positioning.\n    //\n    // This will apply scroll-padding-top in any browsers that don't support :has\n    // (https://caniuse.com/css-has). This is part of the reason we do this in\n    // a \"wrong way round\" way as we hypothesise that the risks of having\n    // scroll-padding unnecessarily is better than risking not having scroll-padding\n    // and needing it to account for exit this page.\n    @supports ((position: -webkit-sticky) or (position: sticky)) {\n      scroll-padding-top: govuk-spacing(9);\n\n      &:not(:has(.govuk-exit-this-page)) {\n        scroll-padding-top: 0;\n      }\n    }\n\n    // Force the scrollbar to always display in IE, to prevent horizontal page\n    // jumps as content height changes (e.g. autocomplete results open).\n    @include govuk-media-query($media-type: screen) {\n      overflow-y: scroll;\n    }\n  }\n\n  // Applied to the <body> element\n  .govuk-template__body {\n    // The default margins set by user-agents are not required since we have our\n    // own containers.\n    margin: 0;\n    // Set the overall body of the page back to the typical background colour.\n    background-color: $govuk-body-background-colour;\n  }\n}\n\n/*# sourceMappingURL=_template.scss.map */\n","////\n/// @group settings/layout\n////\n\n// =========================================================\n// Page layout\n// =========================================================\n\n/// Width of main container\n///\n/// @type Number\n/// @access public\n\n$govuk-page-width: 960px !default;\n\n/// Map of grid column widths\n///\n/// @type Map\n/// @access public\n\n$govuk-grid-widths: (\n  one-quarter: (\n    100% / 4\n  ),\n  one-third: (\n    100% / 3\n  ),\n  one-half: (\n    100% / 2\n  ),\n  two-thirds: (\n    200% / 3\n  ),\n  three-quarters: (\n    300% / 4\n  ),\n  full: 100%\n) !default;\n\n/// Width of gutter between grid columns\n///\n/// @type Number\n/// @access public\n\n$govuk-gutter: 30px !default;\n\n/// Width of half the gutter between grid columns\n///\n/// @type Number\n/// @access public\n\n$govuk-gutter-half: $govuk-gutter / 2;\n\n// =========================================================\n// Borders\n// =========================================================\n\n/// Standard border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width: 5px !default;\n\n/// Wide border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-wide: 10px !default;\n\n/// Narrow border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-narrow: 4px !default;\n\n/// Form control border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-form-element: 2px !default;\n\n/// Form group border width when in error state\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-form-group-error: $govuk-border-width !default;\n\n/// Border width of focus outline\n///\n/// @type Number\n/// @access public\n\n$govuk-focus-width: 3px !default;\n\n/// Hover width for form controls with a hover state\n///\n/// @type Number\n/// @access public\n\n$govuk-hover-width: 10px !default;\n\n/*# sourceMappingURL=_measurements.scss.map */\n","@import \"../base\";\n\n////\n/// @group objects/layout\n////\n\n/// Width container mixin\n///\n/// Used to create page width and custom width container classes.\n///\n/// @param {String} $width [$govuk-page-width] - Width in pixels\n///\n/// @example scss - Creating a 1200px wide container class\n///  .app-width-container--wide {\n///    @include govuk-width-container(1200px);\n///  }\n///\n/// @access public\n\n@mixin govuk-width-container($width: $govuk-page-width) {\n  // By default, limit the width of the container to the page width\n  max-width: $width;\n\n  // On mobile, add half width gutters\n  margin-right: $govuk-gutter-half;\n  margin-left: $govuk-gutter-half;\n\n  // Respect 'display cutout' safe area (avoids notches and rounded corners)\n  @supports (margin: unquote(\"max(calc(0px))\")) {\n    $gutter-safe-area-right: calc(#{$govuk-gutter-half} + env(safe-area-inset-right));\n    $gutter-safe-area-left: calc(#{$govuk-gutter-half} + env(safe-area-inset-left));\n\n    // Use max() to pick largest margin, default or with safe area\n    // Escaped due to Sass max() vs. CSS native max()\n    margin-right: unquote(\"max(#{$govuk-gutter-half}, #{$gutter-safe-area-right})\");\n    margin-left: unquote(\"max(#{$govuk-gutter-half}, #{$gutter-safe-area-left})\");\n  }\n\n  // On tablet, add full width gutters\n  @include govuk-media-query($from: tablet) {\n    margin-right: $govuk-gutter;\n    margin-left: $govuk-gutter;\n\n    // Respect 'display cutout' safe area (avoids notches and rounded corners)\n    @supports (margin: unquote(\"max(calc(0px))\")) {\n      $gutter-safe-area-right: calc(#{$govuk-gutter-half} + env(safe-area-inset-right));\n      $gutter-safe-area-left: calc(#{$govuk-gutter-half} + env(safe-area-inset-left));\n\n      // Use max() to pick largest margin, default or with safe area\n      // Escaped due to Sass max() vs. CSS native max()\n      margin-right: unquote(\"max(#{$govuk-gutter}, #{$gutter-safe-area-right})\");\n      margin-left: unquote(\"max(#{$govuk-gutter}, #{$gutter-safe-area-left})\");\n    }\n  }\n\n  // As soon as the viewport is greater than the width of the page plus the\n  // gutters, just centre the content instead of adding gutters.\n  @include govuk-media-query($and: \"(min-width: #{($width + $govuk-gutter * 2)})\") {\n    margin-right: auto;\n    margin-left: auto;\n\n    // Since a safe area may have previously been set above,\n    // we need to duplicate this margin that centers the page.\n    @supports (margin: unquote(\"max(calc(0px))\")) {\n      margin-right: auto;\n      margin-left: auto;\n    }\n  }\n}\n\n@include govuk-exports(\"govuk/objects/width-container\") {\n  .govuk-width-container {\n    @include govuk-width-container;\n  }\n}\n\n/*# sourceMappingURL=_width-container.scss.map */\n","@include govuk-exports(\"govuk/component/footer\") {\n  $govuk-footer-background: $govuk-canvas-background-colour;\n  $govuk-footer-border: $govuk-border-colour;\n  $govuk-footer-text: $govuk-text-colour;\n\n  // Royal Arms image dimensions\n  $govuk-footer-crest-image-width: 125px;\n  $govuk-footer-crest-image-height: 102px;\n\n  .govuk-footer {\n    @include govuk-font($size: if($govuk-new-typography-scale, 19, 16));\n    @include govuk-responsive-padding(7, \"top\");\n    @include govuk-responsive-padding(5, \"bottom\");\n\n    border-top: 1px solid $govuk-footer-border;\n    color: $govuk-footer-text;\n    background: $govuk-footer-background;\n  }\n\n  .govuk-footer__link {\n    @include govuk-link-common;\n    @include govuk-link-style-text;\n  }\n\n  .govuk-footer__section-break {\n    margin: 0; // Reset `<hr>` default margins\n    @include govuk-responsive-margin(8, \"bottom\");\n    border: 0; // Reset `<hr>` default borders\n    border-bottom: 1px solid $govuk-footer-border;\n  }\n\n  .govuk-footer__meta {\n    display: flex; // Support: Flexbox\n    margin-right: -$govuk-gutter-half;\n    margin-left: -$govuk-gutter-half;\n    flex-wrap: wrap; // Support: Flexbox\n    align-items: flex-end; // Support: Flexbox\n    justify-content: center; // Support: Flexbox\n  }\n\n  .govuk-footer__meta-item {\n    margin-right: $govuk-gutter-half;\n    margin-bottom: govuk-spacing(5);\n    margin-left: $govuk-gutter-half;\n  }\n\n  .govuk-footer__meta-item--grow {\n    flex: 1; // Support: Flexbox\n    @include govuk-media-query($until: tablet) {\n      flex-basis: 320px; // Support: Flexbox\n    }\n  }\n\n  .govuk-footer__licence-logo {\n    display: inline-block;\n    margin-right: govuk-spacing(2);\n    @include govuk-media-query($until: desktop) {\n      margin-bottom: govuk-spacing(3);\n    }\n    vertical-align: top;\n    // Work around SVGs not inheriting color from parent in forced color mode\n    // (https://github.com/w3c/csswg-drafts/issues/6310)\n    forced-color-adjust: auto;\n  }\n\n  .govuk-footer__licence-description {\n    // This makes the license description reflow under the logo when space gets too narrow\n    display: inline-block;\n    // This prevents the description from having orphans when space is narrow enough\n    // and makes the text reflow more nicely\n    text-wrap: balance;\n  }\n\n  .govuk-footer__copyright-logo {\n    display: inline-block;\n    min-width: $govuk-footer-crest-image-width;\n    padding-top: ($govuk-footer-crest-image-height + govuk-spacing(2));\n    background-image: govuk-image-url(\"govuk-crest.svg\");\n    background-repeat: no-repeat;\n    background-position: 50% 0%;\n    background-size: $govuk-footer-crest-image-width $govuk-footer-crest-image-height;\n    text-align: center;\n    white-space: nowrap;\n  }\n\n  .govuk-footer__inline-list {\n    margin-top: 0;\n    margin-bottom: govuk-spacing(3);\n    padding: 0;\n  }\n\n  .govuk-footer__meta-custom {\n    margin-bottom: govuk-spacing(4);\n  }\n\n  .govuk-footer__inline-list-item {\n    display: inline-block;\n    margin-right: govuk-spacing(3);\n    margin-bottom: govuk-spacing(1);\n  }\n\n  .govuk-footer__heading {\n    margin-bottom: govuk-spacing(6);\n    padding-bottom: govuk-spacing(4);\n\n    @include govuk-media-query($until: tablet) {\n      padding-bottom: govuk-spacing(2);\n    }\n    border-bottom: 1px solid $govuk-footer-border;\n  }\n\n  .govuk-footer__navigation {\n    @include govuk-clearfix;\n    margin-right: -$govuk-gutter-half;\n    margin-left: -$govuk-gutter-half;\n  }\n\n  .govuk-footer__section {\n    display: inline-block;\n    margin-bottom: $govuk-gutter;\n    vertical-align: top;\n  }\n\n  .govuk-footer__list {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    column-gap: $govuk-gutter; // Support: Columns\n  }\n\n  @include govuk-media-query($from: desktop) {\n    .govuk-footer__list--columns-2 {\n      column-count: 2; // Support: Columns\n    }\n\n    .govuk-footer__list--columns-3 {\n      column-count: 3; // Support: Columns\n    }\n  }\n\n  .govuk-footer__list-item {\n    @include govuk-responsive-margin(4, \"bottom\");\n  }\n\n  .govuk-footer__list-item:last-child {\n    margin-bottom: 0;\n  }\n}\n\n/*# sourceMappingURL=_index.scss.map */\n","@include govuk-exports(\"govuk/component/header\") {\n  $govuk-header-background: govuk-colour(\"black\");\n  $govuk-header-border-color: $govuk-brand-colour;\n  $govuk-header-border-width: govuk-spacing(2);\n  $govuk-header-text: govuk-colour(\"white\");\n  $govuk-header-link-active: #1d8feb;\n  $govuk-header-nav-item-border-color: #2e3133;\n  $govuk-header-link-underline-thickness: 3px;\n  $govuk-header-vertical-spacing-value: 2;\n  // This crown height is only used to calculate top offset of mobile menu button\n  // as the crown svg height is the only thing that controls the height of the header\n  $govuk-header-crown-height: 30px;\n  $govuk-header-menu-button-height: 24px;\n  $govuk-header-menu-button-width: 80px;\n\n  .govuk-header {\n    @include govuk-font($size: 16, $line-height: 1);\n\n    border-bottom: govuk-spacing(2) solid govuk-colour(\"white\");\n    color: $govuk-header-text;\n    background: $govuk-header-background;\n  }\n\n  .govuk-header__container--full-width {\n    padding: 0 govuk-spacing(3);\n    border-color: $govuk-header-border-color;\n\n    .govuk-header__menu-button {\n      right: govuk-spacing(3);\n    }\n  }\n\n  .govuk-header__container {\n    @include govuk-clearfix;\n    position: relative;\n    margin-bottom: -$govuk-header-border-width;\n    padding-top: govuk-spacing($govuk-header-vertical-spacing-value);\n    border-bottom: $govuk-header-border-width solid $govuk-header-border-color;\n  }\n\n  .govuk-header--full-width-border {\n    border-bottom-color: $govuk-header-border-color;\n\n    .govuk-header__container {\n      border-bottom-color: transparent;\n    }\n  }\n\n  .govuk-header__logotype {\n    display: inline-block;\n    position: relative;\n    top: -3px;\n\n    // Add a gap after the logo in case it's followed by a product name. This\n    // gets removed later if the logotype is a :last-child.\n    margin-right: govuk-spacing(1);\n    fill: currentcolor;\n    vertical-align: top;\n\n    // Prevent readability backplate from obscuring underline in Windows High\n    // Contrast Mode\n    @media (forced-colors: active) {\n      forced-color-adjust: none;\n      color: linktext;\n    }\n\n    // Remove the gap after the logo if there's no product name to keep hover\n    // and focus states neat\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n\n  .govuk-header__product-name {\n    $product-name-offset: if($govuk-new-typography-scale, 7px, 10px);\n    $product-name-offset-tablet: 5px;\n\n    @include govuk-font-size($size: 24, $line-height: 1);\n    @include govuk-typography-weight-regular;\n    display: inline-table;\n\n    // Maintain space below logo when wrapped\n    margin-top: $product-name-offset;\n\n    // Firefox places the GOV.UK logo one pixel higher, due to how it rounds\n    // subpixels, so nudge the product name in FF to still be aligned.\n    @-moz-document url-prefix() {\n      margin-top: $product-name-offset - 0.5px;\n    }\n\n    // Align vertically with logo when not wrapped\n    vertical-align: top;\n\n    @include govuk-media-query($from: tablet) {\n      margin-top: $product-name-offset-tablet;\n      @-moz-document url-prefix() {\n        margin-top: $product-name-offset-tablet - 0.5px;\n      }\n    }\n  }\n\n  .govuk-header__link {\n    // Avoid using the `govuk-link-common` mixin because the links in the header\n    // get a special treatment, because:\n    //\n    // - underlines are only visible on hover\n    // - all links get a 3px underline regardless of text size, as there are\n    //   multiple grouped elements close to one another and having slightly\n    //   different underline widths looks unbalanced\n    @include govuk-link-style-inverse;\n\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n      text-decoration-thickness: $govuk-header-link-underline-thickness;\n\n      @if $govuk-link-underline-offset {\n        text-underline-offset: $govuk-link-underline-offset;\n      }\n    }\n\n    &:focus {\n      @include govuk-focused-text;\n    }\n  }\n\n  .govuk-header__link--homepage {\n    // Font size needs to be set on the link so that the box sizing is correct\n    // in Firefox\n    display: inline-block;\n    margin-right: govuk-spacing(2);\n    font-size: 30px; // We don't have a mixin that produces 30px font size\n\n    @include govuk-media-query($from: desktop) {\n      display: inline;\n\n      &:focus {\n        // Replicate the focus box shadow but without the -2px y-offset of the first yellow shadow\n        // This is to stop the logo getting cut off by the box shadow when focused on above a product name\n        box-shadow: 0 0 $govuk-focus-colour;\n      }\n    }\n\n    &:link,\n    &:visited {\n      text-decoration: none;\n    }\n\n    &:hover,\n    &:active {\n      // Negate the added border\n      margin-bottom: $govuk-header-link-underline-thickness * -1;\n      border-bottom: $govuk-header-link-underline-thickness solid;\n    }\n\n    // Remove any borders that show when focused and hovered.\n    &:focus {\n      margin-bottom: 0;\n      border-bottom: 0;\n    }\n  }\n\n  .govuk-header__service-name {\n    display: inline-block;\n    margin-bottom: govuk-spacing(2);\n    @include govuk-font-size($size: 24);\n    @include govuk-typography-weight-bold;\n  }\n\n  .govuk-header__logo,\n  .govuk-header__content {\n    box-sizing: border-box;\n  }\n\n  .govuk-header__logo {\n    @include govuk-responsive-margin($govuk-header-vertical-spacing-value, \"bottom\");\n    // Protect the absolute positioned menu button from overlapping with the\n    // logo with right padding using the button's width\n    padding-right: $govuk-header-menu-button-width;\n\n    @include govuk-media-query($from: desktop) {\n      width: 33.33%;\n      padding-right: $govuk-gutter-half;\n      float: left;\n      vertical-align: top;\n\n      // Reset float when logo is the last child, without a navigation\n      &:last-child {\n        width: auto;\n        padding-right: 0;\n        float: none;\n      }\n    }\n  }\n\n  .govuk-header__content {\n    @include govuk-media-query($from: desktop) {\n      width: 66.66%;\n      padding-left: $govuk-gutter-half;\n      float: left;\n    }\n  }\n\n  .govuk-header__menu-button {\n    @include govuk-font($size: 16);\n    max-width: $govuk-header-menu-button-width;\n    min-height: $govuk-header-menu-button-height;\n    margin-bottom: govuk-spacing(1);\n    padding: 0;\n    border: 0;\n    color: govuk-colour(\"white\");\n    background: none;\n    word-break: break-all;\n    cursor: pointer;\n\n    &:hover {\n      -webkit-text-decoration: solid underline $govuk-header-link-underline-thickness;\n              text-decoration: solid underline $govuk-header-link-underline-thickness;\n\n      @if $govuk-link-underline-offset {\n        text-underline-offset: $govuk-link-underline-offset;\n      }\n    }\n\n    &:focus {\n      @include govuk-focused-text;\n    }\n\n    &::after {\n      @include govuk-shape-arrow($direction: down, $base: 10px, $display: inline-block);\n      content: \"\";\n      margin-left: govuk-spacing(1);\n    }\n\n    &[aria-expanded=\"true\"]::after {\n      @include govuk-shape-arrow($direction: up, $base: 10px, $display: inline-block);\n    }\n\n    @include govuk-media-query($from: mobile) {\n      position: absolute;\n      // calculate top offset by:\n      // - getting the vertical spacing for the top and the bottom of the header\n      // - adding that to the crown height\n      // - dividing it by 2 so you have the vertical centre of the header\n      // - subtracting half the height of the menu button\n      top: (((govuk-spacing($govuk-header-vertical-spacing-value) * 2) + $govuk-header-crown-height) / 2) -\n        ($govuk-header-menu-button-height / 2);\n      right: 0;\n      margin: 0;\n    }\n\n    @include govuk-media-query($from: tablet) {\n      top: govuk-spacing(3);\n    }\n\n    .govuk-frontend-supported & {\n      display: block;\n    }\n\n    &[hidden],\n    .govuk-frontend-supported &[hidden] {\n      display: none;\n    }\n  }\n\n  .govuk-header__navigation {\n    @include govuk-media-query($from: desktop) {\n      margin-bottom: govuk-spacing(2);\n    }\n  }\n\n  .govuk-header__navigation-list {\n    // Reset user-agent default list styles\n    margin: 0;\n    padding: 0;\n    list-style: none;\n\n    &[hidden] {\n      display: none;\n    }\n  }\n\n  .govuk-header__navigation--end {\n    @include govuk-media-query($from: desktop) {\n      margin: 0;\n      padding: govuk-spacing(1) 0;\n      text-align: right;\n    }\n  }\n\n  .govuk-header__navigation-item {\n    padding: govuk-spacing(2) 0;\n    border-bottom: 1px solid $govuk-header-nav-item-border-color;\n\n    @include govuk-media-query($from: desktop) {\n      display: inline-block;\n      margin-right: govuk-spacing(3);\n      padding: govuk-spacing(1) 0;\n      border: 0;\n    }\n\n    a {\n      @include govuk-font-size($size: 16);\n      @include govuk-typography-weight-bold;\n      white-space: nowrap;\n    }\n  }\n\n  .govuk-header__navigation-item--active {\n    a {\n      &:link,\n      &:hover,\n      &:visited {\n        color: $govuk-header-link-active;\n      }\n\n      // When printing, use the normal blue as this contrasts better with the\n      // white printing header\n      @include govuk-media-query($media-type: print) {\n        color: $govuk-brand-colour;\n      }\n\n      // When focussed, the text colour needs to be darker to ensure that colour\n      // contrast is still acceptable\n      &:focus {\n        color: $govuk-focus-text-colour;\n      }\n    }\n  }\n\n  .govuk-header__navigation-item:last-child {\n    margin-right: 0;\n    border-bottom: 0;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    .govuk-header {\n      border-bottom-width: 0;\n      color: govuk-colour(\"black\");\n      background: transparent;\n    }\n\n    .govuk-header__link {\n      &:link,\n      &:visited {\n        color: govuk-colour(\"black\");\n      }\n\n      // Do not append link href to GOV.UK link when printing (e.g. '(/)')\n      &::after {\n        display: none;\n      }\n    }\n  }\n}\n\n/*# sourceMappingURL=_index.scss.map */\n","////\n/// @group helpers/shapes\n////\n\n/// Calculate the height of an equilateral triangle\n///\n/// Multiplying half the length of the base of an equilateral triangle by the\n/// square root of three gives us its height. We use 1.732 as an approximation.\n///\n/// @param {Number} $base - Length of the base of the triangle\n/// @return {Number} Calculated height of the triangle\n/// @access private\n\n@function _govuk-equilateral-height($base) {\n  $square-root-of-three: 1.732;\n\n  @return ($base / 2) * $square-root-of-three;\n}\n\n/// Arrow mixin\n///\n/// Generate Arrows (triangles) by using a mix of transparent (1) and coloured\n/// borders. The coloured borders inherit the text colour of the element (2).\n///\n/// Ensure the arrow is rendered correctly if browser colours are overridden by\n/// providing a clip path (3). Without this the transparent borders are\n/// overridden to become visible which results in a square.\n///\n/// We need both because older browsers do not support clip-path.\n///\n/// @param {String} $direction - Direction for arrow: up, right, down, left.\n/// @param {Number} $base - Length of the triangle 'base' side\n/// @param {Number} $height [null] - Height of triangle. Omit for equilateral.\n/// @param {String} $display [block] - CSS display property of the arrow\n///\n/// @access public\n\n@mixin govuk-shape-arrow($direction, $base, $height: null, $display: block) {\n  display: $display;\n\n  width: 0;\n  height: 0;\n\n  border-style: solid;\n  border-color: transparent; // 1\n\n  $perpendicular: $base / 2;\n\n  @if not $height {\n    $height: _govuk-equilateral-height($base);\n  }\n\n  @if $direction == \"up\" {\n    -webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n            clip-path: polygon(50% 0%, 0% 100%, 100% 100%); // 3\n\n    border-width: 0 $perpendicular $height;\n    border-bottom-color: inherit; // 2\n  } @else if $direction == \"right\" {\n    -webkit-clip-path: polygon(0% 0%, 100% 50%, 0% 100%);\n            clip-path: polygon(0% 0%, 100% 50%, 0% 100%); // 3\n\n    border-width: $perpendicular 0 $perpendicular $height;\n    border-left-color: inherit; // 2\n  } @else if $direction == \"down\" {\n    -webkit-clip-path: polygon(0% 0%, 50% 100%, 100% 0%);\n            clip-path: polygon(0% 0%, 50% 100%, 100% 0%); // 3\n\n    border-width: $height $perpendicular 0 $perpendicular;\n    border-top-color: inherit; // 2\n  } @else if $direction == \"left\" {\n    -webkit-clip-path: polygon(0% 50%, 100% 100%, 100% 0%);\n            clip-path: polygon(0% 50%, 100% 100%, 100% 0%); // 3\n\n    border-width: $perpendicular $height $perpendicular 0;\n    border-right-color: inherit; // 2\n  } @else {\n    @error \"Invalid arrow direction: expected `up`, `right`, `down` or `left`, got `#{$direction}`\";\n  }\n}\n\n/*# sourceMappingURL=_shape-arrow.scss.map */\n","////\n/// @group helpers/accessibility\n////\n\n/// Helper function containing the common code for the following two mixins\n///\n/// @link https://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n///   - Hiding Content for Accessibility, Jonathan Snook, February 2011\n/// @link https://github.com/h5bp/html5-boilerplate/blob/9f13695d21ff92c55c78dfa9f16bb02a1b6e911f/src/css/main.css#L121-L158\n///   - h5bp/html5-boilerplate - Thanks!\n///\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\n///\n/// @access private\n\n@mixin _govuk-visually-hide-content($important: true) {\n  position: absolute if($important, !important, null);\n\n  width: 1px if($important, !important, null);\n  height: 1px if($important, !important, null);\n  // If margin is set to a negative value it can cause text to be announced in\n  // the wrong order in VoiceOver for OSX\n  margin: 0 if($important, !important, null);\n  padding: 0 if($important, !important, null);\n\n  overflow: hidden if($important, !important, null);\n\n  // `clip` is needed for IE11 support\n  clip: rect(0 0 0 0) if($important, !important, null);\n  -webkit-clip-path: inset(50%) if($important, !important, null);\n          clip-path: inset(50%) if($important, !important, null);\n\n  border: 0 if($important, !important, null);\n\n  // For long content, line feeds are not interpreted as spaces and small width\n  // causes content to wrap 1 word per line:\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n  white-space: nowrap if($important, !important, null);\n\n  // Prevent users from selecting or copying visually-hidden text. This prevents\n  // a user unintentionally copying more text than they intended and needing to\n  // manually trim it down again.\n  -webkit-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n\n/// Hide an element visually, but have it available for screen readers\n///\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\n///\n/// @access public\n\n@mixin govuk-visually-hidden($important: true) {\n  @include _govuk-visually-hide-content($important: $important);\n\n  // Absolute positioning has the unintended consequence of removing any\n  // whitespace surrounding visually hidden text from the accessibility tree.\n  // Insert a space character before and after visually hidden text to separate\n  // it from any visible text surrounding it.\n  &::before {\n    content: \"\\00a0\";\n  }\n\n  &::after {\n    content: \"\\00a0\";\n  }\n}\n\n/// Hide an element visually, but have it available for screen readers whilst\n/// allowing the element to be focused when navigated to via the keyboard (e.g.\n/// for the skip link)\n///\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\n///\n/// @access public\n\n@mixin govuk-visually-hidden-focusable($important: true) {\n  // IE 11 doesn't support the combined `:not(:active, :focus)` syntax.\n  &:not(:active):not(:focus) {\n    @include _govuk-visually-hide-content($important: $important);\n  }\n}\n\n/*# sourceMappingURL=_visually-hidden.scss.map */\n","@include govuk-exports(\"govuk/utilities/visually-hidden\") {\n  .govuk-visually-hidden {\n    @include govuk-visually-hidden;\n  }\n\n  .govuk-visually-hidden-focusable {\n    @include govuk-visually-hidden-focusable;\n  }\n}\n\n/*# sourceMappingURL=_visually-hidden.scss.map */\n"],"names":[],"sourceRoot":""}